<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Tao AI</title>
<style type="text/css">
.style1 {
	font-size: xx-large;
}
.style7 {
	text-align: center;
	font-size: xx-large;
}
 .fc11 a{color:#43699a;}
.fc11 a{text-decoration:none;}.nbw-blog *{line-height:160%;}</style>
</head>

<body>

<p><span class="style1">2008</span></p>
<p class="style7">Tao AI system</p>
<p align="center"><a target="_blank" href="1735856181375005278.jpg">
<img src="1735856181375005278.jpg" width="540" height="429" /></a><br />
<font size="2">开始的小测试环境</font></p>
<p align="left"><font size="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
上图是最开始构造的一个测试小环境，模拟个体能够获得（得到输入）自己的当前速度、角度、HP以及最近目标的相对位置，离目标越近HP减少得越慢，存活时间越长者适应度越高。刚开始的情况是完全随机，模拟个体完全在一个随机的最小结构神经网络的支持下处理自己的输入。这样的设置相当简单，程序员几乎不做什么工作！接下来就是运行，运行，再运行。个体会不断地发生变化最终达到这个小环境设计者心里的样子吗？到底明天它会不会自动设计出策划要求去达到这个简单任务的NPC呢？<br />
</font>&nbsp;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
几个月前，我为CH系统（一个实验性项目）构建的分布式模拟环境基本就绪。该环境采用了HLA网络结构组建，基本上完成了对HLA核心网进行的二次封装，另外构造了一个广域网的扩展接入系统方便更广泛的人机交互！目前这个体系的基本稳定为我的试验项目奠定下了第一个基础。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
这三年来我一直致力于图形引擎的开发和应用工作，之前在MSRA的纯图形学以及图形硬件的研究工作也奠定了足够的图形基础，因此对这个试验项目而言，一个较为完善的软件研究平台和图形支持系统也很快基本成型，并且能够很方便地投入到研究和设计工作中去。这可以说是试验项目的第二个基础。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
前段时间，我在这个平台上对随机宇宙（过程宇宙——Real-Time Procedural 
Universe，这方面主要研究自动、随机地生成各类拟真的图形、图像、逻辑内容）的一些基础算法、架构的研究模拟和实现（<a target="_blank" href="http://xiaopplus.blog.163.com/blog/static/46019200779041064/">link</a>），使得我更加确信CH系统在内容上人机交互的支持能力也一定会相当强大，特别是对人机图形界面，任何内容的变化都能实时表现在远程的图形客户端上。</p>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
两个月前，我觉得系统底层的一些必要支持已经基本到位，于是我开始构造这个项目的第三大基础架构（即CH必须是一个智能的、自组织的、演化的系统），另外我也希望能提出一种自下而上的开发方式。我知道，CH这样一个大系统，必然是一个“复杂系统”。对复杂系统的研究目前学术界也仅有几个前沿的方向，比如人工智能、人工生命、神经网络、分形、细胞自动机等理论、模型及算法。既然认为CH系统必须要是一个智能的自组织世界，就必然涉及到这些学科方向。这几年来我一直借助在游戏/网络游戏领域的工作机会，探索它们应用的可行性，但长期来对人工智能的有限应用总是让人找不到方向。要么必须在一些明确的问题域上面求得具体的实现（比如A 
Star），要么必须要找到游戏内容相关的复杂具体模型（比如路点模型、有限状态机模型等等），这对程序开发人员和策划人员来说实际上都是很痛苦的。严格的说，目前我在游戏上的这些工作还谈不上与复杂系统有什么关系，仅仅是一些自上而下的常规开发策略。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
幸喜的是，早就有不少游戏/软件开发公司开始尝试类似自下而上的开发方式。比如，据说Maxis公司的《模拟城市》近几个系列中就采用了人工神经网络技术；不少单机策略或者射击游戏中，开发公司在设计时也离线进化了不少游戏角色和策略；EA在最新的模拟类游戏Spore（孢子）中也很可能采用了一些进化方面的算法或者技术。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
其实在复杂系统中，细胞自动机、神经网络、进化算法、粒子群算法（比如蚁群算法）等领域都是具有良好的应用前景（当然是什么时候大规模应用我们就不去追究了），开始我打算直接在CH系统中使用人工神经网络（ANN），但是在试验中发现，ANN除了本身需要一个较为难描述的环境模型外（特别是实际游戏应用，网游就更不用说了），如果要达到一个通用的、优秀的、无监督的求解性能的话，ANN的算法也是要相当考究的，目前这方面也正是ANN领域研究的重中之重。应此在游戏应用或者模拟研究中，我觉得不大可能寻求到一个现实的实时自适应ANN系统来满足要求，而且毕竟我们不是搞研究而是搞应用的。</p>
<p align="center"><a target="_blank" href="2847963814358693380.jpg">
<img src="2847963814358693380.jpg" /></a><br />
<font size="2">一个反相传播的神经网络。设计这样一个网络对于复杂输入和输出的环境来说“几乎”是不可能的。</font></p>
<p align="left"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
为此前段时间我投入到细胞自动机、蚁群算法等领域中去找寻一些应用上的可能点。都怪“元胞自动机（CA）”前不久闹得很火，霍夫曼（自称CA之父）也曾大言不惭CA能颠覆人类得一切科学，谓之“新科学”。拜读其大作以及进行一些试验后，发觉一些思想确实非常新颖独到，很多试验也相当有趣。但是总觉得对CA的研究大多以证明某某理论为结果，没有一点预测能力（即科学的理论总是可以预测的），总有点事后诸葛的感觉。我也很难从CA引出一些能辅助设计的路子来（nb的霍夫曼认为“宇宙就是一巨大的CA，除了实实在在地注视、观看这些规则会如何呈现其结果之外，没有任何办法去预先知道这些结果”，那研究这个理论有个P用啊）。况且它和蚁群算法一样，问题域或者空间维数的增大不可避免地需要庞大的甚至不且实际的计算量（这点蚁群算法还算好些）。</p>
<p align="center"><a target="_blank" href="4579316396105905348.jpg">
<img src="4579316396105905348.jpg" /></a></p>
<p align="left"><font size="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
一个有趣的报告是Wolfram公司的Paul Jean做的，他研究基本细胞自动机（Elementary Cellular 
Automata,ECA）家族中的第146号，发现了一个奇特的现象。以某个特定的初始条件开始，146号ECA在经过300多步演化之后会突然出现一个相变行为：本来随机排列的一些黑白方格在一个时间步内突然集体变成了白色，并且这个白色区域经过几步演化之后逐渐衰退，因而会在时间图上留下一个大的三角形区域。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
这种现象对于146号ECA来说属于一种极其罕见的行为：只有在特定的初始条件才能发现，Paul称这一现象为Monolith，即“独石碑”。Wolfram常常把自己发明的细胞自动机比喻成当年伽利略发明的望远镜，透过先进的工具，我们可以得到一些全新的科学观察。<br />
</font></p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Spore这样的游戏让我看到了另外一个可能方向——进化。从Spore的介绍以及细节上看来，似乎不是严格意义上的实时进化，而且也不大可能会有形态上面的进化（形态进化需要更为有效的图形学理论以及强大的计算能力）。游戏过程仍然是处于人为选择或者策划设定的进化模拟，大多数内容仍然是事先设定好的，不过模型的有机化和进化的思想和表现倒是其卖点。Spore的发行一拖再拖，似乎Will 
Wright（就是开发《模拟城市》和《模拟人生》那个家伙哈）不把它做得完美就不罢休似的，所以最终版本出来是什么样子还不得而知，期待中…… ^-^</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
在Spore这个游戏感受的诱惑下，我考查了许多进化相关的游戏或者软件系统的资料和Paper，国际上也有很多的小项目组专门做这方面的探索，从各种复杂系统小程序到Tierra/Avida的代码进化，从Framsticks的形态行为进化到AI.Planet那漂亮的生物乐园。真还没有想到，居然处处都有进化人工生命的影子！ 
</p>
<p align="center"><a target="_blank" href="4294745194651431475.jpg">
<img src="4294745194651431475.jpg" /></a><a target="_blank" href="1132092356330557636.jpg"><img src="1132092356330557636.jpg" /></a><br />
<font size="2">Panspermia中进化出来的生物和世界<br />
<a target="_blank" href="4005670393569591785.jpg">
<img src="4005670393569591785.jpg" width="260" height="254" /></a><a target="_blank" href="4005670393569591786.jpg"><img src="4005670393569591786.jpg" width="238" height="251" /></a><a target="_blank" href="1166995253442642718.jpg"><img src="1166995253442642718.jpg" width="446" height="260" /></a></font></p>
<font size="2">
<p align="left">&nbsp; Framsticks:&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. A creature made of sticks, each is specialized in some 
function. You can see three receptors – touch, smell, equilibrium, and a red 
muscle.&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2. Underwater creature seeking energy.<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
3. Hunt: a creature trying to catch and kill the other one. </p>
</font>
<p align="center"><a target="_blank" href="1749648455233732848.jpg">
<img src="1749648455233732848.jpg" width="611" height="253" /></a></p>
<p align="center"><font size="2">AI.Planet中丰富的进化世界</font></p>
<p><br />
<span><font face="宋体"><font face="Arial">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</font>对</font></span><span lang="EN-US">GA</span><span><font face="宋体">（遗传算法）的详细考查过后，我决心将遗传算法简洁高效的进化思想应用到</font></span><span lang="EN-US">CH</span><span><font face="宋体">系统中来，正巧我已经准备好了一个很好的</font></span><span lang="EN-US">HLA</span><span><font face="宋体">模拟体系，加上对</font></span><span lang="EN-US">ANN</span><span><font face="宋体">比较熟悉，我选取了来自</font></span><span lang="EN-US">NNRG</span><span><font face="宋体">（</font></span><span lang="EN-US">nerual 
netwaoks research group</span><span><font face="宋体">）的一些研究成果来进行攻关和改进。</font></span><span lang="EN-US">NNRG</span><span><font face="宋体">虽然看起来仅是国际上的一个神经网络研究小组（</font></span><span lang="EN-US">The 
group is part of the <a href="http://z.cs.utexas.edu/users/ai-lab/">Artificial 
Intelligence Lab</a> in the <a href="http://www.cs.utexas.edu/">Computer Science 
Department</a> at the <a href="http://www.utexas.edu/">University of Texas at 
Austin</a></span><span><font face="宋体">），但是从它的研究领域和项目中可以看到，它对基于</font></span><span lang="EN-US">NN</span><span><font face="宋体">应用的一个很大领域都有涉猎，而且它融入了很多其他领域的成果。</font></span><span lang="EN-US">NNRG</span><span><font face="宋体">有个</font></span><span lang="EN-US">NEAT</span><span><font face="宋体">项目，是一个关于自适应地从简单到复杂构造一个满足问题域的神经网络，适应算法上又采用了</font></span><span lang="EN-US">GA</span><span><font face="宋体">的思想，应此性能和效果都比较好，对我而言它更重要的是还不用关心</font></span><span lang="EN-US">NN</span><span><font face="宋体">的具体模型和优化细节！有趣的是，</font></span><span lang="EN-US">NNRG</span><span><font face="宋体">甚至也出了一个游戏，叫</font></span><span lang="EN-US">NERO</span><span><font face="宋体">，可以离线进化一些很好的策略来进行战斗对抗。</font></span><span lang="EN-US"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><font face="宋体">我现在拥有的</font></span><span lang="EN-US">HLA</span><span><font face="宋体">核心网络上可以进行较好的分布式模拟，因此我对</font></span><span lang="EN-US">NEAT</span><span><font face="宋体">进行了改进，将基因的进化和</font></span><span lang="EN-US">ANN</span><span><font face="宋体">的适应度评估和应用较独立的分开来。应用</font></span><span lang="EN-US">NEAT</span><span><font face="宋体">的实时进化特性（</font></span><span lang="EN-US">rtNEAT</span><font face="宋体"><span>），加上我对核心网扩展的广域网接入系统，人类（玩家）也可以很好的加入互动，这样设计有利于未来在网络游戏具体项目上的应用。</span></font></p>
<p>&nbsp;</p>
<p><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>
由于基因的进化在服务器上进行，并且可以随时保存和重加载，以网络游戏的角度来看，实时进化在不间断的人机互动中可以表现得很好。再从游戏的设计上来看，策划无需设定甚至分析具体的任务实现过程（特别是</span><span lang="EN-US">NPC</span><span>），程序员不用为实现这个过程煞费苦心做复杂的设计（况且每个程序员设计出来的算法不一定就是最优的，策划也不一定具有相当丰富的专业知识和经验。而遗传算法在理论上来说就可以达到全局最优），所有的设计工作都是在长期的在线运行和与环境（甚至真人）的互动中进化达成；策划也可以设定广泛的游戏环境和属性（这目前是策划大量的工作）而不用再担心诸如增加一个属性就会造成各个系统的相应修正和程序配合修改这种事情（比如</span><span lang="EN-US">NPC</span><span>从不能攻击到支持攻击，环境中新增加一种叫做</span><span lang="EN-US">“food”</span><span>的道具）。</span><span lang="EN-US"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>经过这段时间的试验，我想再从策划的角度来看，策划设计一个东西就可以考虑是走自上而下的分析路子，还是较为傻瓜的自下而上的新路子了！目前我只是提出这样一个设计方向，还有待进一步试验来观察它的实际应用效果。</span><span lang="EN-US"><br />
<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BTW</span><span>，由于这个小环境试验前几天才设定好，这几天还没有来得及去运行它，反正进化的基因可以保存和再加载，可以说设计过程是连续的，每天都可以出新花样。所以我在接下来的日子可以经常报告这个</span><span lang="EN-US">CH</span><span>小世界的情况，多多截屏。比如下周发现新进化出（设计出）了一个光吃不打的</span><span lang="EN-US">farmer</span><span>类角色或者一个光打不吃的</span><span lang="EN-US">warrior</span><span>类角色；又或者在下周某天我加入了一种新的食物类</span><span lang="EN-US">obj</span><span>或者阻挡类</span><span lang="EN-US">obj</span><span>，他们又会涌现（复杂系统？？）出某些行为模式出来。暂且将之后这类日志归入博客上的</span><span lang="EN-US">“CH</span><span>世界大事记</span><span lang="EN-US">”</span><span>一栏吧，嘿嘿。</span></p>
<p><strong>Exp 1</strong></p>
<p align="center">
<img border="0" src="1735856181375005278.jpg" width="353" height="350" /><br />
系统开始时的状态</p>
<p align="center"><a target="_blank" href="3953597522878193421.jpg">
<img src="3953597522878193421.jpg" width="339" height="329" /></a>&nbsp;<a target="_blank" href="349310446098217401.jpg"><img src="349310446098217401.jpg" width="336" height="360" /></a><br />
10分钟后系统的状态</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font size="3">
星期六开始运行这个简单设置的环境，模拟个体所能获得的输入包括周围个体数目、自己的当前速度、角度、HP以及最近目标的相对位置，离目标越近HP减少得越慢，存活时间越长者适应度越高。系统中人口数为100，个体和基因一一对应。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
刚开始的情况是完全随机，模拟个体的大脑完全由各种随机的、最小结构的神经网络支持。</font></p>
<p align="left"><font size="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
上面的图是运行大概十分中后的截屏。左边的图中可以看到多于一半的个体开始有向目标移动的趋势，个体速度也由最初的随机值（基本上是很小的速度）趋向于较大值。从场景的分析可以得出，这是向全局最优解靠近的正确方向。</font></p>
<p align="left"><font size="3">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再运行一段时间后（&gt;1000秒），右边的图中可以看到部分优势个体除了向目标靠近外，到达目标后产生了“刹车”的趋势，以达到徘徊于目标附近的目的。这个结果就该场景而言已经很接近最优解了。</font></p>
<p align="left">&nbsp;</p>
<p align="left"><font size="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
这次试验发觉，对基本的NN（神经网络）进化而言，程序员仍然有一个工作要做，那就是得依据环境和个体的情况分析出NN的输入和输出，包括其个数和意义！可以联想到游戏中策划的这个工作也正是巨大的，如果设计一个NPC，得事先“规定”好它们的有效行为有哪些，它们的有效输出是什么。策划必须以专业知识指出哪些输入、输出是有用的，而且限于分析和程序承受量，还得尽量以最少的输入输出进行设计，即有效的“Feature 
Select”。对NN而言，输入和输出的个数增加特别是多余的输入和输出（比如现在我试验中的“周围个体数目”对完成任务的NN来说就是一多余输入），对NN的进化和执行性能均带来巨大负担！因此，FeatureSelect的工作就更加重要和繁重了。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我尝试在系统中对NN的输入和输出不加以严格定义，将目前我能提供的所有信息全部作为NN的输入（达21个之多），目标位置检测采用在个体360度范围内均匀放置物体传感器（sensor）。类似于昆虫的复眼，每个传感器对相应方向上范围中的物体进行探测。</font></p>
<p align="left"><font size="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
根据遗传神经网络算法的特征，可以将“对输入的选择”本身也进行进化，从而找到合理的最小输入集！</font></p>
<p align="left">&nbsp;</p>
<p align="left"><font size="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
接下来的几天，我将对目标的位置进行随机的变换，看这些个体能否进一步学会追踪不同位置的目标；接着可能给个体增加一个“eat”的行为对应NN的一个新的输出，然后看试验结果。</font></p>
<p align="left"><strong>Exp2</strong></p>
<p align="center"><a target="_blank" href="2605613859410877889.jpg">
<img src="2605613859410877889.jpg" /></a><br />
个体增加了“eat”动作，目标“food”可以被吃掉，然后随机在另外一个地方产生</p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接上回的系统设定，这次我将场景中预置了100个“food”Object，每个food可以被吃掉，吃掉后的food在1秒钟后随机地在另外一个地方重生。个体增加一个输出用以激活“eat”行为，该行为在离最近的一个food 
50单位的距离内生效，无效的eat行为会受到减hp的惩罚。eat行为成功后，个体将增加hp。不再以个体靠近food与否进行加分。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这回我们看能设计出什么样的个体来！由于目前场景和个体行为简单，我们可以人工分析出最后最优个体的行为模式来比对！但是在将来复杂的环境，甚至本身就在进化的环境中，我相信个体行为会让我们大吃一惊的！</p>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
加载上次运行的结果（个体大脑NN的基因），刚开始运行时可以看到大部分个体围着food打转，由于新输出的“eat”行为目前几乎随机产生，因此个体受到惩罚较大，死亡还是较快的。运行一段时间后，可以看到有些个体不但能“吃掉”身边的food，还能够在吃掉后赶紧跑到另外的最近food处继续。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
这里需要说明一下，GNN（进化神经网络）的优势是可以“记忆”之前的进化结果，即之前的基因结构被有效保留，个体在新的环境中可以利用旧的知识进行活动。因此可以看到，该系统中一个环境的逐渐改变能够导致物种的逐渐进化，如果环境突变，个体将大灭绝，这和自然界非常相似！从程序设计的角度讲，不会因为环境新的改变（food要消失并且在他处出现）和个体新的行为（增加eat行为）而从零开始去运行进化程序，个体基因（实际上就是代表该物种的<strong>设计</strong>）能适当地适应新的环境、正确发出新的行为，并且仍然能有效地继续优化（进化）。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BTW，在前天的个体输入处理上（视觉传感器），我犯了一个极大的错误，没有考虑进个体当前的方向。现在据我分析，由于food目标的不变以及hp增减的算法固定，因此仍然能够进化出来像昨天那样的结果，即某种局部最优解。今天发现这个问题后我立即修正了ant的视觉传感器，天，其实在昨天的情况下，不到3分钟便能进化出相当高效的行动模式来了，而且更加真实合理。今天的新场景也能够相当快地进化出可观的结果（都是几分钟）。</p>
<p align="left"><strong>Exp3</strong></p>
<p align="center"><a target="_blank" href="893120101103291989.jpg">
<img src="893120101103291989.jpg" width="225" height="320" /></a>&nbsp;<a target="_blank" href="580401401977791723.jpg"><img src="580401401977791723.jpg" width="365" height="316" /></a></p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
个体不再被告知有多少种输入输出或者可以选择什么，代之存在一系列通用的效应器和感受器，让个体自发地选择效应器和感受器来构成自己的身体。类似于自然界，生物的结构本身就是进化而来的。个体具备一定的结构后，就可以产生一定的功能性行为，这些结构可以认为是功能性器官在图形上直观的表现出来。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<a target="_blank" href="582934676768164291.jpg"></a>
<p align="center"><a target="_blank" href="582934676768164292.jpg">
<img src="582934676768164292.jpg" /></a>&nbsp;<a target="_blank" href="4294182244698073571.jpg"><img src="4294182244698073571.jpg" /></a>&nbsp;<a target="_blank" href="582934676768164293.jpg"><img src="582934676768164293.jpg" /></a>&nbsp;<a target="_blank" href="582934676768164291.jpg"><img src="582934676768164291.jpg" /></a></p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
上面图形单元表示目前我给予的四种功能器官，物种可以自由选择这些器官（包括种类和个数）构成自己的身体，这些器官产生神经网络的输入或者对神经网络的输出激活某些行为。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 左一表示个体具有速度敏感的感觉器官。有多个这种器官的话，则有多个这种圈出现在个体身上。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
左二的一根细线表示个体装备了一个雷达，或者广义的视觉器官（眼睛），颜色的R分量表示雷达类型（目标敏感型、形状敏感型等等），G分量表示雷达能探测到那种目标，比如探测到个体的雷达目前就没有什么用。B分量表示该感受器生长在生物身体上的位置（角度）。因此从不同颜色可以直观看出个体具有的视觉器官。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;左三是一个可以驱动运动的效应器，相当于生物体的运动器官（腿），一个运动器官需要两个输出神经元来驱动才能生效（左右加力），因此我又称它为“双驱动器”。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
左四是一个取食器官（嘴），可以激活取食的行为。目前取食行为仅对food有效，因此个体的行为模式比较简单，能够分析出来。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
进化中可以看到，个体能进化出多个感觉器官（开始是一两个眼睛，进而越来越多，我相信个体不需要太多眼睛就能适应这个环境），同时能进化出运动器官和取食器官，有的个体还具备多个运动器官（多条腿）或者多张嘴。模拟中可以看到，在目前的场景环境中，对自己速度敏感的感觉器官似乎没有什么用处，也不知道是不是还没有到使用它的时候，即合适的进化阶段还没有到。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
试验中发现，大量个体能够形成不同的物种种群（species）。因此模拟采用了和自然界一样的方法，在个体交配时种内个体交配几率极大大于种间交配。这样既保护了优势基因的进化，同时也提高了进化效率。否则在巨量个体中杂交，还真不知道是做人还是做猪啦，呵呵。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
学术界有种说法，基因本身的表达过程较为重要，即从基因型到表现型的转化。生物界有发育过程，因此计算机模拟可能需要加入发育的过程。基因在发育过程中的某个阶段才能适当表现出来，这点也许是相当重要的。</p>
<p align="left"><strong>Exp4</strong></p>
<p>
采用Tank（坦克大战）的资源，丰富的元素可以构造较为典型场景。地面支持土地、雪地、冰冻地面、冰窟地面，地表阻挡层支持砖墙、混凝土墙、树木、河流、石头、金属墙、关卡。</p>
<p align="center"><a target="_blank" href="4302345019023032335.jpg">
<img src="4302345019023032335.jpg" /></a></p>
<p align="center">XPeng场景 ^-^ </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
这些场景元素以及整个场景仍然在分布式的服务器上模拟，客户端仅仅是显示而已。由于它们可以简洁高效地和其他模拟个体交互，因此和之前的考查一样，这样的场景天生成为进化神经网络的实验场。并且由于生物个体（tank）的数目可以巨大，而且不同于传统坦克大战规则，我不但让个体有更大的自由度，让个体之间也能够以某种语言（相互作用）交互，我寄希望在这个系统中能观测到较大规模的涌现现象。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
进一步的，突破传统坦克大战的规则，我打算尝试加入RPG的思想，即场景（关卡）之间有某种联系，比如传送门可以在关卡之间漫游，关卡之间将等价于构成了复杂的巨大世界，而且各个关卡可以实现有意义的特色地域，可以为模拟自然选择在不同环境下的进化结果创造条件。个体在这样巨大场景中可以自由漫游，我希望能观测到一些涌现出的群体迁徙、地域特征保留和进化。</p>
<p><strong>Exp5</strong></p>
<p align="center"><a href="322007373357570338.jpg">
<img border="0" src="322007373357570338.jpg" width="207" height="203" /></a></p>
<p align="left">昨天做了一个新的测试场景，结果令人高兴，这段时间的重新编码工作为个体提供了丰富的环境和完备的传感器以及效应器。</p>
<p align="left">
模拟是这样进行的，个体在中心产生，朝向角度随机。适应性的定义仍然统一到一个值——生存时间，影响它的因素（及世界物理规律）有如下几个：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
－－ 个体做直线运动增加hp<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
－－ 个体做旋转运动降低hp<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
－－ 个体碰撞到砖块降低hp（多）<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
－－ hp随时间按一定速率降低<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;－－ 场景交互支持碰撞<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;很显然，这个环境进化出的最适应者应该是一个较好的漫游者，尽量走动，不频繁拐弯，避开障碍，在大事记中我将这批个体代号记为“漫游者”，机型属于“先驱”系列，因为它们是规范的、可持续设计和进化的第一种个体。</p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
OK，准备好这个小CH世界，基因数目设置到50，运行系统，个体全部在出生点乱转。20分钟后，我洗完澡回来看，就是上面的样子。仍然有些“漫游者”在原地转，但有一些已经开始往旁边直线走过去然后碰在墙上不再行动，另一些明显在要撞墙之前立即180度转身，然后继续走直线，再转身，再直线……。也观察到少量“漫游者”往左上方向“出口”处走，避开墙壁，沿墙间道路行走，但最终在左墙外侧碰壁，之后就不再行动。系统显示当前的进化次数已有200多次，我估计首次物种爆发（即从随机态到开始学会利用感受器官）的起点可能大大早于200次进化，我相信在之后的某点上物种会再次爆发，从而迅速产生绕全场行动的漫游者。</p>
<p align="left">&nbsp;</p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
这次重新编码也整理了整个个体的模拟架构，规范化了NN输入输出能够采用的感受器和效应器。NNRG采用了下图所示的4种感受器和3种效应器，我在其基础上进行了泛化。和之前的设计一样，感受器输出作为NN网络的输入，网络输出作为效应器的输入，感受器和效应器人为配置，我目前不再研究这些器官的进化（可以参考发育算法以及相关人工生命的论述，例如“人工生命的突现研究及其在互动媒体中的应用，黄文高，2005”），但这些器官可以统一配置和自由增删。系统仅对NN网络进行复杂度递增的进化，采用实时NEAT算法（NEAT: 
Stanley and Miikkulainen 2002b, 2004a）。</p>
<p align="center"><a target="_blank" href="322007373357570329.jpg">
<img src="322007373357570329.jpg" /></a></p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
通过这个架构，每个CH个体能“看到”想看的物体、判断特定的目标是否在自己面对的方向或者火力方向、检测物体或墙体的可能的碰撞，甚至能够判断出敌人的火力线。网络输出决定了身体移动的方向，决定自己是否拿上某些物品或者使用某些物品，决定是否开火。目前这些配置已经能够满足对多样复杂行为的进化，而且其他类型的行为可以很容易实现，感受器也很容易被修改从而形成新的版本和能力。（explanation 
in en: Each&nbsp;CH agent can see certain objs, determine whether an&nbsp;target is 
currently in its heading direction or line of fire, detect objects and walls, 
and see the direction the enemy is firing. Its outputs specify the direction of 
movement and whether or not to take obj, use obj or fire. This configuration has 
been used to evolve varied and complex behaviors; other variations work as well 
and the standard set of sensors can easily be changed in CH.）</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 目前系统已支持以下的3种感受器官，适合绝大部分应用：</p>
<p align="center"><a target="_blank" href="322007373357570330.jpg">
<img src="322007373357570330.jpg" width="340" height="221" /></a></p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
个体采用几个Radar感受器将周围360度空间分成一些探测区域，区域内物体和个体的接近程度按比例地激活相应的传感器。对于多个物体，采用他们激励值的和。（explanation 
in en：Several radar sensors divide the 360 degrees around the agent into slices. 
Each slice activates a sensor in proportion to how close an&nbsp;specified obj&nbsp;is 
within that slice. If there is more than one target in it, their activations are 
summed.）</p>
<p align="center"><a target="_blank" href="322007373357570331.jpg">
<img src="322007373357570331.jpg" width="349" height="235" /></a></p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Rangefinders传感器以一定角度从个体中心向外投射射线，射线与最近的物体交点到个体的距离作为传感器的激励值。这种传感器非常适合探测有连续形状的物体，相反的，Radar传感器则适用于探测独立的微小物体。（explanation 
in english：Rangefinders project rays at several angles from the agent. The 
distance the ray travels before it hits an object is returned as the value of 
the sensor. Rangefinders are useful for detecting long contiguous objects 
whereas radars are appropriate for relatively small, discrete objects.）</p>
<p align="center"><a target="_blank" href="322007373357570334.jpg">
<img src="322007373357570334.jpg" width="211" height="202" /></a></p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
目标（on-target）传感器仅有激活和复位两种状态，只要有对应目标在正前方，则传感器就被激活。这类传感器往往可以告诉个体是否应该射击。（explanation 
in en：The on-target sensor returns full activation only if a ray projected along 
the front heading of the agents hits an specified object(target). This sensor 
tells the agent whether it should attempt to shoot.）</p>
<p align="left">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
系统支持Driver，Take，Use三种效应器，这些效应器在功能上非常泛化，其激活与否以及行为的对象等等均是由NN网络的输出决定的。例如，Driver需要两个输出神经元激活，Take/Use需要至少3个神经元激活，目前我仅编码了Driver和Take效应器，有待进一步的测试。</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CH世界会越来越有趣啦。。。。</p>

</body>

</html>
